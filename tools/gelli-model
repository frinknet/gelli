#!/usr/bin/env sh
set -e

parse_ol() {
  spec=${1#ol:}
  slug=$(printf '%s\n' "$spec" | cut -d: -f1)
  tag=$(printf '%s\n' "$spec" | cut -s -d: -f2)
  tag="${tag:-latest}"
  out=$(echo "$slug:$tag" | sed 's#[:/\]#-#g')
  dest="/models/$out.gguf"

  [ -f "$dest" ] && { echo "$out"; return; }

  echo "↓ ol:$slug:$tag → $out" >&2

  manifest="https://registry.ollama.ai/v2/library/${slug}/manifests/${tag}"
  digest=$(wget -qO- "$manifest" | jq -r '.layers[0].digest')
  url="https://registry.ollama.ai/v2/library/${slug}/blobs/$digest"

  echo "$dest" "$url"
}

parse_hf() {
  spec=${1#hf:}
  repo=$(printf '%s\n' "$spec" | cut -d: -f1)
  quant=$(printf '%s\n' "$spec" | cut -s -d: -f2)
  file=$(printf '%s\n' "$spec" | cut -s -d: -f3)
  out=$(echo "${repo}-${quant}-${file}" | sed 's#[:/\]#-#g')
  dest="/models/$out.gguf"

  [ -f "$dest" ] && { echo "$out"; return; }

  echo "↓ hf:$repo:$quant:$file → $out" >&2

  url="https://huggingface.co/$repo/resolve/main/$file.gguf"

  echo "$dest" "$url"
}

parse() {
  case "$1" in
    ol:*) parse_ol "$1";;
    hf:*) parse_hf "$1";;
    *) echo "/models/$(basename "$1").gguf";;
  esac
}

fetch() {
  dest="$1"
  url="$2"
  arg="$3"

  [ -f "$dest" ] || wget -qO "$dest" "$url"

  if [ -f "$dest" ]; then
    basename "${dest%.*}"
  else
    echo "MODEL MISSING → $arg" >&2

    exit 1
  fi
}

download() {
  for arg in "$@"; do
    fetch $(parse "$arg") "$arg"
  done
}

list() {
  glob="${1:-*}"

  cd /models

  for f in $glob; do
    [ -f "$f" ] && printf '%s\n' "${f%.*}"
  done

  exit 0
}

delete() {
  for arg in "$@"; do
    file=$(parse "$arg")

    rm "$file"
  done
}

case "$1" in
  list) list "${@:2}";;
  delete) delete "${@:2}";;
  *) download "$@";;
esac
