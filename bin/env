#!/usr/bin/env sh

error() {
  echo $@ >&2

  exit 1
}

safety() {
  local dir=$(echo "$PWD/./${1#$PWD}" | awk -F/ '
    {
      n = split($0, a, "/")
      out = ""

      for(i=1;i<=n;i++){
  if(a[i]=="."||a[i]=="") continue
  else if(a[i]=="..") sub("/[^/]+$", "", out)
  else out=out"/"a[i]
      }

      print out ? out : "/"
    }
  ')

  echo ".${dir#$PWD}"
}

tooling() {
  [ -t 0 ] && sed '1,/^---$/d' "$1" | exec yq e -o=json '.' && exit

  echo moving on

  json=$(cat)

  for key in $(echo "$json" | jq -r 'keys[]'); do
    value=$(echo "$json" | jq -r ".\"$key\" // empty")

    case "$key" in
      dir) eval "$key=\$(safety '$value')";;
      file) [ -n "$value" ] && eval "$key=\$(safety '$value')";;
      *) eval "$key='$value'"
    esac
  done

  export GELLI_TOOL="${0##*/}"
}

prefix() {
  for file in "$RUN/$1"/*; do
    alias "$2-$(basename "$file")"="$file"
  done
  for file in ".$BIN/$1"/*; do
    alias "$2-$(basename "$file")"="$file"
  done
}

SHELL=

[ -z "$ENV" ] && export ENV="$(realpath "$0" 2>/dev/null || echo "$ENV")"
[ -z "$RUN" ] && export RUN="${ENV%/bin/env}"
[ -z "$BIN" ] && export BIN="${RUN##*/}"

export PS1="\n\[\e[1;91m\]  \$PWD \[\e[38;5;52m\]\$\[\e[0m\] \[\e]12;#999900\007\]\[\e]12;#999900\007\]\[\e[3 q\]"

prefix bin "$BIN"
prefix tools tool
prefix agents agent

if [ "$1" = "sh --tool" ]; then
  export SHELL=$(which "$1")
  shift
  tooling "$1"
elif [ "$1" = "sh" ]; then
  export SHELL=$(which "$1")
  shift
fi

[ -n "$SHELL" ] && source "$@"
