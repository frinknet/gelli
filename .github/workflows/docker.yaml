name: Publish Docker

on:
  push:
    tags:
      - 'v*'
    branches:
      - 'develop'
      - 'review'
  workflow_dispatch: {}

jobs:
  build:
    if: always() && !failure() && (startsWith(github.ref, 'refs/tags/v') || contains(fromJson('["refs/heads/dev", "refs/heads/staging"]'), github.ref))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}
      VERSION: ${{ startsWith(github.ref, 'refs/tags/v') && github.ref_name || format('{0}-{1}', github.ref_name, github.sha) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          flavor: |
            latest=${{ startsWith(github.ref, 'refs/tags/v') }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=dev,enable=${{ github.ref == 'refs/heads/dev' }}
            type=raw,value=staging,enable=${{ github.ref == 'refs/heads/staging' }}
      
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ env.VERSION }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Echo tags and version
        run: |
          printf 'Tags: %s\n' "${{ steps.meta.outputs.tags }}"
          printf 'Version: %s\n' "${{ env.VERSION }}"
